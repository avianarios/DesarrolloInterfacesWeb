@charset "UTF-8";
/*
Sass viene con muchos módulos, organizados por categoría

    The sass:math module provides functions that operate on numbers.
    The sass:string module makes it easy to combine, search, or split apart strings.
    The sass:color module generates new colors based on existing ones, making it easy to build color themes.
    The sass:list module lets you access and modify values in lists.
    The sass:map module makes it possible to look up the value associated with a key in a map, and much more.
    The sass:selector module provides access to Sass’s powerful selector engine.
    The sass:meta module exposes the details of Sass’s inner workings.

Para usar funciones incluidas en esos módulos en nuestro código, hay que invocarlo con @use "sass:módulo"
    */
/*FUNCIONES
Se usan cuando hay que hacer algún cálculo, NO PARA REUTILIZAR CÓDIGO. Para eso están los mixins*/
/*MAPA
Se accede a los valores con una llave*/
/*Este comentario irá en el CSS, salvo que se use el modo comprimido*/
/*!Este comentario siempre irá en el CSS*/
body {
  font-size: 16px;
  background-color: #3498db;
}

.navbar {
  background-color: #2c3e50;
}

/*Web desarrollada por Chiquito de la calzada*/
.button-red {
  background-color: "red";
}

font-size {
  font-size: 16px;
}

.selector {
  color-background: "blue";
}

body {
  background-color: rgb(181, 181, 243);
  color: rgb(248, 176, 176);
}

.selector {
  background-image: url("images/logo.png");
}

/*FUNCIONES: Ver el archivo _funciones.scss*/
h1 {
  font-size: 24px;
}

h2 {
  font-size: 20px;
}

/*MIXINS
Los Mixins permiten reutilizar el mismo código css en diferentes partes invocándolo por su nombre. Permiten usar argumentos 
En este se ha usado una función ("masOscuro", definida en el fichero _funciones.scss)*/
main p, main .clase, footer p, footer .clase {
  text-align: center;
  color: masOscuro(rgb(248, 176, 176));
  font-weight: bold;
  font-size: 1.25em;
}

/*ANIDACIÓN DE SELECTORES
Se usa el operador & para referenciar al padre (en este caso a .header)*/
.header {
  width: 80%;
  margin: 0 auto;
}
.header-primero {
  color: #1300ff;
}
.header .segundo {
  color: #1300ff;
}

nav h1 {
  text-align: center;
  color: masOscuro(rgb(248, 176, 176));
  font-weight: bold;
  font-size: 2em;
}
nav p {
  text-align: center;
  color: masOscuro(rgb(248, 176, 176));
  font-weight: bold;
  font-size: pasaPXaREM(100);
}

/*LISTAS
Colección de valores, se accede por índice. Primer elemento = 1*/
.banner h1 {
  font-size: 80px;
}

/*MAPAS
Son parecidos a las listas, pero incorporan una llave para acceder a los valores*/
.error-leve {
  font-size: 1rem;
}

/*ESTRUCTURAS DE CONTROL

/*EACH
 Puedo recorrer los valores de un mapa o lista y crear clases nuevas usando la interpolación mediante la almohadilla*/
.error-leve {
  font-size: 1rem;
}

.error-medio {
  font-size: 2rem;
}

.error-grave {
  font-size: 2.5rem;
}

/*EACH
cada usuario con su imagen*/
.perfil-pepe {
  background: image-url("img/pepe.png") no repeat;
}

.perfil-lola {
  background: image-url("img/lola.png") no repeat;
}

.perfil-manuel {
  background: image-url("img/manuel.png") no repeat;
}

header {
  background-color: #fff;
  color: #000;
}

/*WHILE
 cada td de la tabla con un color*/
td:nth-child(1) {
  color: #f00;
  background-color: #0f0;
}

td:nth-child(2) {
  color: #f00;
  background-color: #00f;
}

td:nth-child(3) {
  color: #f00;
  background-color: orange;
}

td:nth-child(4) {
  color: #f00;
  background-color: #ccc;
}

/* FOR
cada párrafo de un color*/
p:nth-of-type(1) {
  color: #f00;
  background-color: #0f0;
}

p:nth-of-type(2) {
  color: #f00;
  background-color: #00f;
}

p:nth-of-type(3) {
  color: #f00;
  background-color: orange;
}

p:nth-of-type(4) {
  color: #f00;
  background-color: #ccc;
}

/*RECORRIDO DE MAPAS CON MÁS DE UN VALOR POR CLAVE E INTERPOLACIÓN*/
.m-button {
  display: inline-block;
  padding: 0.5em;
  background: #ccc;
  color: #666;
}
.m-button--error {
  background-color: #d82d2d;
  color: #666;
}
.m-button--success {
  background-color: #52bf4a;
  color: #fff;
}
.m-button--warning {
  background-color: #c23435;
  color: #fff;
}

/*OPERADORES CONDICIONALES*/
body {
  color: #dedede;
  background-color: #191919;
}

/*HERENCIA
Si se quiere declarar una regla sólo para que las demás hereden de ella (lo que se llama clase abstracta en algunos lenguajes de programación), se antepone %
Para heredar de un elemento se usa @extend

Herencia vs Mixins
La herencia se usa cuando tiene sentido semánticamente que algunas clases hereden de otras como, por ejemplo, .error-grave y .error-leve podrían heredar de .error los elementos comunes
Si necesitamos usar variables, hay que usar mixins 
*/
.error-grave, .error-leve {
  color: red;
}

.error-leve {
  font-size: 1rem;
}

.error-grave {
  font-size: 2rem;
}

/*Media queries implementadas mediante mixins*/
@media only screen and (min-width: 30em) {
  .texto {
    color: red;
  }
}
@media only screen and (min-width: 50em) {
  .texto {
    color: green;
  }
}
@media only screen and (min-width: 75em) {
  .texto {
    color: blue;
  }
}

/*OPERADORES
The unary operators not, +, -
The *, math.div, and % operators.
The + and - operators.
The >, >=, < and <= operators.
The == and != operators.
The and operator.
The or operator.
The = operator, when it’s available.
*/
h2 {
  padding: 25px;
}

.btn {
  background-color: lightgreen;
}

h2:after {
  content: "My favorite language is Sass";
  font: Arial sans-serif;
}

/*Las funciones definidas en un módulo pueden ser accesibles sin un @use explícito en algunos casos cuando se importan a través de un archivo principal (_main.scss). Esto se debe a un comportamiento algo permisivo en Sass que permite la propagación de funciones sin necesidad de hacer un @use explícito en los archivos que las necesiten, siempre que el archivo se haya importado previamente.
Las variables de Sass:

Por otro lado, las variables no se propagan de la misma manera que las funciones. Para las variables, es necesario que cada archivo donde se vayan a utilizar haga explícitamente un @use del archivo que las define. Esto se debe a que las variables están asociadas a un espacio de nombres y Sass no permite que se compartan entre archivos a menos que se haga explícitamente.*/
/*if star is not used, namespaces need to be utilized:
    variables.$nombre_variable need to be specified everytime it's used*//*# sourceMappingURL=main.css.map */