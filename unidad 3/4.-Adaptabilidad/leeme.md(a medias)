El propósito principal de <picture> es permitir que el navegador seleccione un tipo de archivo (como WebP o JPEG) basado en la compatibilidad del navegador, y luego ajustar la resolución según el tamaño de la pantalla mediante los media queries.

<picture>
   <!-- WebP como primer intento -->
   <source type="image/webp" media="(max-width: 799px)" srcset="../img/Paisaje-arbol-300px.webp">
   <source type="image/webp" media="(min-width: 800px) and (max-width: 1199px)" srcset="../img/Paisaje-arbol-700px.webp">
   <source type="image/webp" media="(min-width: 1200px) and (max-width: 1899px)" srcset="../img/Paisaje-arbol-1000px.webp">
   <source type="image/webp" media="(min-width: 1900px)" srcset="../img/Paisaje-arbol-1600px.webp">
   
   <!-- JPEG como fallback para navegadores que no soportan WebP -->
   <source type="image/jpeg" media="(max-width: 799px)" srcset="../img/Paisaje-arbol-300px.jpg">
   <source type="image/jpeg" media="(min-width: 800px) and (max-width: 1199px)" srcset="../img/Paisaje-arbol-700px.jpg">
   <source type="image/jpeg" media="(min-width: 1200px) and (max-width: 1899px)" srcset="../img/Paisaje-arbol-1000px.jpg">
   
   <!-- Imagen predeterminada en JPEG para navegadores más antiguos -->
   <img src="../img/Paisaje-arbol-1600px.jpg" alt="Un bonito paisaje">
</picture>


Explicación:

    Primero se organiza por tipo de archivo (en este caso, primero WebP y luego JPEG). Esto asegura que los navegadores modernos que soportan WebP carguen ese formato, mientras que los navegadores más antiguos carguen JPEG.
    Luego se usan los media queries para establecer las resoluciones dependiendo del tamaño de la pantalla.
    El elemento <img> con la fuente predeterminada (src) es el fallback para los navegadores que no soportan <picture>.


    En el caso de srcset dentro de la etiqueta <img>, es mejor organizar las imágenes por resolución, ya que srcset permite al navegador seleccionar la imagen más adecuada en función de la resolución de la pantalla y el tamaño del viewport.
Razón:

    El atributo srcset está diseñado para trabajar con la resolución de las imágenes (en píxeles) y el navegador seleccionará la mejor opción según la densidad de píxeles del dispositivo (por ejemplo, una pantalla Retina).
    Al organizar por resolución, el navegador puede elegir la imagen que mejor se ajuste a las condiciones actuales, sin tener que preocuparse de los formatos, ya que el navegador se encargará de eso dependiendo de la compatibilidad.

Ejemplo de organización por resolución en srcset:

<img
   srcset="../img/Paisaje-arbol-1600px.webp 1600w,
           ../img/Paisaje-arbol-1600px.jpg 1600w,
           ../img/Paisaje-arbol-1000px.webp 1000w,
           ../img/Paisaje-arbol-1000px.jpg 1000w,
           ../img/Paisaje-arbol-700px.webp 700w,
           ../img/Paisaje-arbol-700px.jpg 700w,
           ../img/Paisaje-arbol-300px.webp 300w,
           ../img/Paisaje-arbol-300px.jpg 300w"
   sizes="(max-width: 499px) 80vw,
          (max-width: 799px) 70vw,
          (max-width: 1199px) 60vw,
          (max-width: 1799px) 50vw,
          1600px"
   src="../img/Paisaje-arbol-300px.jpg"
   alt="Un bonito paisaje de sierra"
/>

    En el atributo srcset de la etiquta img, se especifican las imágenes organizadas en orden de resolución (de mayor a menor), lo que permite que el navegador seleccione la imagen más adecuada en función de la pantalla y el tamaño.

    Cuando se especifica el atributo sizes, el navegador puede tomar una decisión más informada sobre qué imagen cargar, no solo basándose en el tamaño del dispositivo (como con srcset), sino también en el tamaño que realmente ocupará la imagen en la página. Esto ayuda a optimizar la carga de la imagen, ya que el navegador sabe con más precisión qué imagen es la mejor opción según las condiciones actuales del viewport.

¿Por qué es mejor organizar por resolución en srcset?

    El navegador seleccionará la imagen más adecuada de acuerdo con la densidad de píxeles de la pantalla y el tamaño de la ventana.
    Esto permite que el navegador elija automáticamente entre los diferentes tamaños de imágenes sin tener que especificar explícitamente los media queries como se hace en <picture>.

    La diferencia principal entre usar srcset en la etiqueta <img> y usar <picture> radica en la flexibilidad y control sobre el formato de imagen y las condiciones bajo las cuales se seleccionan.
1. srcset en <img>:

    Uso principal: srcset dentro de la etiqueta <img> se utiliza principalmente para cambiar el tamaño de la imagen dependiendo de la resolución de la pantalla o el tamaño del viewport.
    Selección de resolución: Permite al navegador elegir la imagen más adecuada según la resolución (con w o x para representar ancho o densidad de píxeles).
    No permite control sobre el tipo de archivo: srcset solo permite cambiar el tamaño de la imagen, pero no el formato. El navegador seleccionará automáticamente el formato más adecuado según lo que soporte (WebP, JPEG, etc.), y no puedes especificar diferentes tipos de archivo para diferentes condiciones.
    Ideal para cambios en el tamaño de la imagen, no en el formato.

Ejemplo:

<img srcset="paisaje-300.jpg 300w, paisaje-600.jpg 600w, paisaje-1000.jpg 1000w" sizes="(max-width: 600px) 100vw, 50vw" src="paisaje-600.jpg" alt="Paisaje">

2. <picture>:

    Uso principal: <picture> te da más control sobre el tipo de imagen que se sirve, como el formato de la imagen (por ejemplo, WebP vs JPEG) y el tamaño de la imagen.
    Selección del formato: A diferencia de srcset, <picture> te permite especificar diferentes formatos de archivo dependiendo de las condiciones de la pantalla (por ejemplo, si es un navegador que soporta WebP o no). Puedes usar múltiples <source> para especificar diferentes tipos de archivo (como WebP y JPEG) y también usar media queries para ajustar el tamaño de la imagen para distintos tamaños de pantalla.
    Ideal para diferentes tipos de archivo y mayor control sobre condiciones.

Ejemplo:

<picture>
  <!-- WebP para navegadores que lo soporten -->
  <source type="image/webp" srcset="paisaje-300.webp 300w, paisaje-600.webp 600w, paisaje-1000.webp 1000w" media="(max-width: 600px)">
  <!-- JPEG como fallback -->
  <source type="image/jpeg" srcset="paisaje-300.jpg 300w, paisaje-600.jpg 600w, paisaje-1000.jpg 1000w" media="(max-width: 600px)">
  <!-- Imagen predeterminada -->
  <img src="paisaje-600.jpg" alt="Paisaje">
</picture>

Diferencias clave:

    Control sobre el formato de imagen:
        <img srcset>: No puedes controlar el formato, solo puedes cambiar la resolución de la imagen.
        <picture>: Te permite especificar diferentes formatos de imagen (por ejemplo, WebP o JPEG), lo que es útil para aprovechar los formatos más eficientes como WebP en navegadores que lo soportan.

    Condiciones de selección:
        <img srcset>: Solo se enfoca en la resolución y el tamaño de la pantalla, no en el formato.
        <picture>: Puedes usar media queries para especificar diferentes tipos de imágenes y formatos según el tamaño de la pantalla y el tipo de dispositivo (por ejemplo, imagen más pequeña en móviles, y formato diferente si el navegador no soporta WebP).

    Compatibilidad con navegadores antiguos:
        <img srcset>: Funciona bien para la selección de tamaño de imagen, pero no para diferentes formatos.
        <picture>: Si usas formatos como WebP, puedes proporcionar un fallback con JPEG o PNG, lo que te da más control en cuanto a compatibilidad con navegadores antiguos.

¿Cuándo usar cada uno?

    Usa srcset si solo necesitas cambiar el tamaño de la imagen según la resolución de la pantalla o el tamaño del viewport y no te importa el formato.

    Usa <picture> si necesitas control total sobre el formato de la imagen (como servir WebP a navegadores compatibles y JPEG a los que no lo soportan) o si quieres personalizar la imagen en función de varios factores, como el tamaño de pantalla y el tipo de dispositivo.